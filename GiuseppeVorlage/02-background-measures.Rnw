\Sexpr{set_parent('Casalicchio_Giuseppe.Rnw')}

\section{Performance Measures}
\label{sec:perfmeasures}

Blabla

\subsection{Measures for Regression}

Blabla

\subsection{Measures for Binary Classification}
\label{sec:binclass}

Blabla with nice picture

\begin{figure}[!htb]
\centering
\includegraphics[width=0.7\textwidth]{figures/classifier-predictions_large.pdf}
\caption{Illustration of how different types of predictions can be converted into another type. The topics of recalibrating, calibrating, and thresholding are also referred to in the corresponding paragraphs below.}\label{fig:classifpred}
\end{figure}

\subsubsection*{Discrete Classifiers}

Blabla with nice table

\begin{table}[!htb]
\begin{center}
\renewcommand{\arraystretch}{1.2}
\begin{tabular}{l|c|c|c|c}
\multicolumn{2}{c}{} & \multicolumn{2}{c}{Ground Truth} & \\
\cline{3-4}
\multicolumn{2}{c|}{} & Positive & Negative & \\
\multicolumn{2}{c|}{} & $Y = 1$ & $Y = 0$ & \\
\cline{2-4}
\parbox[t]{4mm}{\multirow{4}{*}{\rotatebox[origin=c]{90}{Prediction}}}
%& & & & \\
& Positive & \multirow{2}{*}{$TP$} & \multirow{2}{*}{$FP$} & \\
& $\hh(X) = 1$ & & & \\
\cline{2-4}
%& & & & \\
& Negative & \multirow{2}{*}{$FN$} & \multirow{2}{*}{$TN$} & \\
& $\hh(X) = 0$ & & & \\
\cline{2-4}
\multicolumn{1}{c}{} & \multicolumn{1}{c|}{Total} & \multicolumn{1}{c|}{$TP + FN$} & \multicolumn{1}{c|}{$FP + TN$} & \\
\end{tabular}
\end{center}
\caption{An illustration of a $2 \times 2$ confusion matrix.
$TN$ and $TP$ refer to the number of predicted classes that were correctly classified as the negative and positive class, respectively.
$FN$ and $FP$ refer to the positive and negative classes of the ground truth that were wrongly classified as the negative and positive class, respectively.}\label{tab:confusion}
\end{table}

\subsubsection*{Scoring Classifiers}

Blabla with cool R code that produces nice figure.

<<echo=FALSE, results='hide'>>=
set.seed(123)
fun = ecdf(rexp(1000000, rate = 5))
x = seq(0, 1, length = 1000)
d = data.frame(x = x, y = fun(x))
@

<<echo=FALSE, fig.pos="!htb", warning=FALSE, fig.height=3.5, fig.width=8, fig.cap="\\label{fig:roc}Panel (a) displays the best possible discrete classifier in the ROC space and two random guessing classifiers lying on the baseline, namely one that always predicts class 1 and one that never predicts class 1. Panel (b) displays the optimal ROC curve (with $AUC = 1$), a ROC curve with $AUC = 0.8$, and the ROC curve of a random guessing classifier (with $AUC = 0.5$).", fig.pos="ht", fig.align="center", out.width="\\textwidth">>=
gg_color_hue = function(n) {
  hues = seq(15, 375, length = n + 1)
  hcl(h = hues, l = 65, c = 100)[1:n]
}
palette(gg_color_hue(4))
library(gridExtra)
rd = data.frame(x = c(0, 1), y = c(0, 1))
classif = data.frame(x = c(0, 1, 1, 0), y = c(1, 0, 1, 0),
  classifier = c("best", "worst", "random", "random"))
classif = droplevels(classif[-2, ])

p = ggplot(rd, aes(x = x, y = y)) +
  # geom_area(mapping = aes(x = x, y = y), fill = "red", alpha = 0.5) +
  coord_fixed(ratio = 1) +
  ylab(expression(widehat(TPR))) + xlab(expression(widehat(FPR))) +
  theme_classic2() +
  theme(
    panel.grid.major = element_line(colour = "grey90"),
    panel.grid.minor = element_line(colour = "grey90"),
    legend.text = element_text(size = 8),
    legend.title = element_text(size = 10),
    #legend.margin = element_text(margin = margin(0,0,0,0)),
    #legend.key.size = unit(1, "lines"),
    #legend.position = "bottom",
    legend.box.spacing = unit(0, "lines"),
    axis.text.y = element_text(angle = 90, hjust = 0.5),
    plot.title = element_text(margin = margin(0,0,5,0), hjust = 0.5, size = 12)
    )

p1 = p +
  geom_line(colour = "grey50", lty = 2) +
  geom_text(aes(x = 0.5, y = 0.5, hjust = 0.5, vjust = -0.5, label = "baseline"), colour = "grey50", size = 3, angle = 45) +
  geom_point(data = classif, aes(x = x, y = y, colour = classifier), size = 3) +
  geom_text(data = classif[classif$classifier == "random",],
    aes(x = x, y = y, hjust = c(1.1, -0.1), vjust = c(0.5, 0.5)),
    label = c("always predict class 1", "never predict class 1"),
    colour = "grey50", size = 3) + ggtitle("(a)") +
    scale_color_manual("classifier",
     values = c("best" = 1, "random" = "gray50"))

d2 = rbind(
  cbind(d, AUC = round(mean(d$y), 2)),
  cbind(classif[c(3, 1, 2), 1:2], AUC = 1),
  cbind(rd, AUC = 0.5)
  )
d2$AUC = factor(d2$AUC, levels = c("1", "0.8", "0.5"))
p2 = p +
  geom_text(aes(x = 0.5, y = 0.5, hjust = 0.5, vjust = -0.5, label = "baseline"), colour = "grey50", size = 3, angle = 45) +
  geom_line(data = d2, aes(x = x, y = y, lty = AUC, col = AUC)) + ggtitle("(b)") +
  #scale_colour_manual(values = c("red","green","blue")) +
  #geom_area(data = d2, aes(x = x, y = y), fill = "gray50", alpha = 0.2) +
  geom_line(data = d2, aes(x = x, y = y, lty = AUC, col = AUC)) +
  ylim(c(0, 1)) +
  scale_linetype_manual("AUC",
     values = c("1" = 4, "0.8" = 1, "0.5" = 2),
     labels = paste0(c(1, 0.8, 0.5))) +
    scale_color_manual("AUC",
     values = c("1" = 1, "0.8" = 3, "0.5" = "gray50"),
     labels = paste0(c(1, 0.8, 0.5))) +
  NULL

#ggarrange(p1, p2, nrow = 1, ncol = 2)

# devtools::install_github("thomasp85/patchwork")
library(patchwork)
p1 + plot_spacer() + p2 + plot_layout(nrow = 1, widths = c(1, 0.1, 1)) & theme(plot.margin = grid::unit(c(0, 0, 0, 0), "mm"))
@
